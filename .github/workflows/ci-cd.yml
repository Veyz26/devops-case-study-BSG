name: CI/CD - build & deploy

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: af-south-1

jobs:
  codeql:
    name: CodeQL SAST
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v2
        with:
          languages: java
      - uses: github/codeql-action/analyze@v2

  build-and-push:
    needs: codeql
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build jar
        working-directory: payment-platform
        run: mvn -B -f pom.xml clean package

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ env.AWS_REGION }}

      - name: Build & push payment image
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_PAYMENT_REPO: ${{ secrets.ECR_PAYMENT_REPO }}
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_PAYMENT_REPO }}:latest
          docker build -t $IMAGE_URI -f payment-platform/Dockerfile .
          docker push $IMAGE_URI

      - name: Build & push geth image
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_GETH_REPO: ${{ secrets.ECR_GETH_REPO }}
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_GETH_REPO }}:latest
          docker pull ethereum/client-go:stable
          docker tag ethereum/client-go:stable $IMAGE_URI
          docker push $IMAGE_URI

  terraform:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infra
        uses: actions/checkout@v4
        with:
          path: infra

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
        working-directory: infra
        run: terraform apply -auto-approve
